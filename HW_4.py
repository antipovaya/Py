# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с
# повторениями). Выдать без повторений в порядке возрастания все те числа, которые
# встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы множеств.
# 11 6
# 2 4 6 8 10 12 10 8 6 4 2
# 3 6 9 12 15 18
# 6 12

# n = int(input('Введите количество элементов 1-го множества: '))
# a = {int(input('Введите элемент: ')) for i in range(n)}
#
# m = int(input('Введите количество элементов 2-го множества: '))
# b = {int(input('Введите элемент: ')) for k in range(m)}
#
# c = a.intersection(b)
#
# print(sorted(c))

#######################################################################################################################

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
# круглой грядке, причем кусты высажены только по окружности. Таким образом, у
# каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai
#  ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.
#
# 4 -> 1 2 3 4
# 9

n = int(input('Введите количество грядок: '))
lst = [int(input('Введите количество грядок: ')) for i in range(n)]
print(lst)
lst = [lst[n-1]] + lst + [lst[0]]  # так как грядка круговая, добавляю 1й элемент в конец, а последний в начало


largest = 0

for i in range(1, len(lst) - 1):
    crop = lst[i - 1] + lst[i] + lst[i + 1]
    if crop > largest:
        largest = crop
print(largest)


